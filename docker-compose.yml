version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./vendor:/var/www/vendor
      - ./node_modules:/var/www/node_modules
    ports:
      - "9000:9000"
    networks:
      - laravel
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - laravel

  webserver:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/cache:/var/cache/nginx
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - laravel

  db:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - laravel
      
  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
